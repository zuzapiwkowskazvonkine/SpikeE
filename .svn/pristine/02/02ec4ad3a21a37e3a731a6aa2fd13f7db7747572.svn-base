function varargout = Loop_file_array(varargin)
% LOOP_FILE_ARRAY MATLAB code for Loop_file_array.fig
%      LOOP_FILE_ARRAY, by itself, creates a new LOOP_FILE_ARRAY or raises the existing
%      singleton*.
%
%      H = LOOP_FILE_ARRAY returns the handle to a new LOOP_FILE_ARRAY or the handle to
%      the existing singleton*.
%
%      LOOP_FILE_ARRAY('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in LOOP_FILE_ARRAY.M with the given input arguments.
%
%      LOOP_FILE_ARRAY('Property','Value',...) creates a new LOOP_FILE_ARRAY or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Loop_file_array_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Loop_file_array_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES
%
% Created by Jerome Lecoq in 2012

% Edit the above text to modify the response to help Loop_file_array

% Last Modified by GUIDE v2.5 08-Feb-2012 18:00:27

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Loop_file_array_OpeningFcn, ...
                   'gui_OutputFcn',  @Loop_file_array_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before Loop_file_array is made visible.
function Loop_file_array_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Loop_file_array (see VARARGIN)

% Choose default command line output for Loop_file_array
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes Loop_file_array wait for user response (see UIRESUME)
% uiwait(handles.figure1);

% We get the input settings to restore state if needed
if (length(varargin)>1)
    Settings=varargin{2};
    set(handles.FileSelectionList,'String',Settings.FileSelectionListString);
    set(handles.FileSelectionList,'Value',Settings.FileSelectionListValue);
    set(handles.UseFORloop,'Value',Settings.UseFORloopValue);
end
UseFORloop_Callback(hObject, eventdata, handles);


% This function send the current settings to the main interface for saving
% purposes and for the batch mode
function Settings=GetSettings(hObject)
handles=guidata(hObject);
Settings.FileSelectionListString=get(handles.FileSelectionList,'String');
Settings.FileSelectionListValue=get(handles.FileSelectionList,'Value');
Settings.UseFORloopValue=get(handles.UseFORloop,'Value');


% --- Outputs from this function are returned to the command line.
function varargout = Loop_file_array_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;
% delete(hObject);


% --- Executes on button press in ValidateValues.
function ValidateValues_Callback(hObject, eventdata, handles)
% hObject    handle to ValidateValues (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global SpikeGui;

ListFile=get(handles.FileSelectionList,'String');
if ~isempty(ListFile)
    SpikeGui.ShareApp.LoadFile=char(ListFile(get(handles.FileSelectionList,'Value')));
end
uiresume;


% --- Executes on button press in ApplyApps.
function ApplyApps_Callback(hObject, eventdata, handles)
% hObject    handle to ApplyApps (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
ValidateValues_Callback(hObject, eventdata, handles);


% --- Executes on button press in SelectFile.
function SelectFile_Callback(hObject, eventdata, handles)
% hObject    handle to SelectFile (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global SpikeMovieData;

% Open file path
[filename, pathname] = uigetfile( ...
    {'*.*','All Files (*.*)'},'Select Files','MultiSelect', 'on');

% Open file if exist
% If "Cancel" is selected then return
if isequal([filename,pathname],[0,0])
    return
    
    % Otherwise construct the fullfilename and Check and load the file
else
    % To keep the path accessible to futur request
    cd(pathname);
    
    ListFile=get(handles.FileSelectionList,'String');
    if isempty(ListFile)
        ListFile={};
    elseif ~iscell(ListFile)
        ListFile={ListFile};
    end
    
    if ~iscell(filename)
        filename={filename};
    end
    oldLength=length(ListFile);
    for i=1:length(filename)
        ListFile{i+oldLength}=fullfile(pathname,filename{i});
    end
    set(handles.FileSelectionList,'String',ListFile);

    set(handles.FileSelectionList,'Value',1);
    UseFORloop_Callback(hObject, eventdata, handles);
end


% --- Executes when user attempts to close figure1.
function figure1_CloseRequestFcn(hObject, eventdata, handles)
% hObject    handle to figure1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: delete(hObject) closes the figure
delete(hObject);


% --- Executes on selection change in FileSelectionList.
function FileSelectionList_Callback(hObject, eventdata, handles)
% hObject    handle to FileSelectionList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns FileSelectionList contents as cell array
%        contents{get(hObject,'Value')} returns selected item from FileSelectionList


% --- Executes during object creation, after setting all properties.
function FileSelectionList_CreateFcn(hObject, eventdata, handles)
% hObject    handle to FileSelectionList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in UseFORloop.
function UseFORloop_Callback(hObject, eventdata, handles)
% hObject    handle to UseFORloop (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of UseFORloop
global SpikeGui;

if (get(handles.UseFORloop,'Value')==1)
    NumberFile=length(get(handles.FileSelectionList,'String'));
    if isfield(SpikeGui.ShareApp,'CurrentIndex')
        if ~isempty(SpikeGui.ShareApp.CurrentIndex)
            set(handles.FileSelectionList,'Value',max(1,min(NumberFile,SpikeGui.ShareApp.CurrentIndex)));
        end
    end
end
