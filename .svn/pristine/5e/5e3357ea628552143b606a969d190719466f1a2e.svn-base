function varargout = Load_Filter_Mat(varargin)
% LOAD_FILTER_MAT MATLAB code for Load_Filter_Mat.fig
%      LOAD_FILTER_MAT, by itself, creates a new LOAD_FILTER_MAT or raises the existing
%      singleton*.
%
%      H = LOAD_FILTER_MAT returns the handle to a new LOAD_FILTER_MAT or the handle to
%      the existing singleton*.
%
%      LOAD_FILTER_MAT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in LOAD_FILTER_MAT.M with the given input arguments.
%
%      LOAD_FILTER_MAT('Property','Value',...) creates a new LOAD_FILTER_MAT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Load_Filter_Mat_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Load_Filter_Mat_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES
%
% Created by Jerome Lecoq in 2011

% Edit the above text to modify the response to help Load_Filter_Mat

% Last Modified by GUIDE v2.5 17-Feb-2012 09:46:37

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Load_Filter_Mat_OpeningFcn, ...
                   'gui_OutputFcn',  @Load_Filter_Mat_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before Load_Filter_Mat is made visible.
function Load_Filter_Mat_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Load_Filter_Mat (see VARARGIN)
global SpikeGui;

% Choose default command line output for Load_Filter_Mat
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes Load_Filter_Mat wait for user response (see UIRESUME)
% uiwait(handles.figure1);

% We get the input settings to restore state if needed
if (length(varargin)>1)
    Settings=varargin{2};
    set(handles.FilenameShow,'String',Settings.FilenameShowString);
    set(handles.FilterSelector,'String',Settings.FilterSelectionListString);
    set(handles.FilterSelector,'Value',Settings.FilterSelectionListValue);
    set(handles.LoadBehSelect,'Value',Settings.LoadBehSelectValue);
    set(handles.LoadBehSelect,'String',Settings.LoadBehSelectString);
    set(handles.SelectAllFilters,'Value',Settings.SelectAllFiltersValue);   
    set(handles.SelectFileOption,'Value',Settings.SelectFileOptionValue);
    set(handles.SelectFileOption,'String',Settings.SelectFileOptionString);
end

if (~iscell(get(handles.SelectFileOption,'String')))
    if isfield(SpikeGui.ShareApp,'LoadFile')
        if ~isempty(SpikeGui.ShareApp.LoadFile)
            TextFileOption{1}='Select file manually';
            TextFileOption{2}='Use current input file';
            set(handles.SelectFileOption,'String',TextFileOption);
        end
    end
end

SelectFileOption_Callback(hObject, eventdata, handles);
SelectAllFilters_Callback(hObject, eventdata, handles);

% This function send the current settings to the main interface for saving
% purposes and for the batch mode
function Settings=GetSettings(hObject)
handles=guidata(hObject);
Settings.FilenameShowString=get(handles.FilenameShow,'String');
Settings.FilterSelectionListString=get(handles.FilterSelector,'String');
Settings.FilterSelectionListValue=get(handles.FilterSelector,'Value');
Settings.LoadBehSelectValue=get(handles.LoadBehSelect,'Value');
Settings.LoadBehSelectString=get(handles.LoadBehSelect,'String');
Settings.SelectAllFiltersValue=get(handles.SelectAllFilters,'Value');
Settings.SelectFileOptionValue=get(handles.SelectFileOption,'Value');
Settings.SelectFileOptionString=get(handles.SelectFileOption,'String');


% --- Outputs from this function are returned to the command line.
function varargout = Load_Filter_Mat_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;
% delete(hObject);

% --- Executes on button press in ValidateValues.
function ValidateValues_Callback(hObject, eventdata, handles)
% hObject    handle to ValidateValues (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
uiresume;

% --- Executes on button press in ApplyApps.
function ApplyApps_Callback(hObject, eventdata, handles)
% hObject    handle to ApplyApps (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global SpikeFilterData;

if (get(handles.LoadBehSelect,'Value')==1)
    InitFilters();
    BeginFilter=1;
else
    BeginFilter=length(SpikeFilterData)+1;
end

h=waitbar(0,'loading data...');
matObj = matfile(get(handles.FilenameShow,'String'));
NumberFilter=size(matObj,'SpikeFilterData');

if (get(handles.SelectAllFilters,'Value')==1)
    FilterSel=1:NumberFilter(2);
else
    FilterSel=get(handles.FilterSelector,'Value');
end

SpikeFilterData(BeginFilter:(BeginFilter-1+length(FilterSel)))=matObj.SpikeFilterData(1,FilterSel);
close(h);
uiresume;

% --- Executes on button press in SelectFile.
function SelectFile_Callback(hObject, eventdata, handles)
% hObject    handle to SelectFile (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global SpikeFilterData;

% Open file path
[filename, pathname] = uigetfile( ...
    {'*.mat','All Files (*.mat)'},'Select MAT File');

% Open file if exist
% If "Cancel" is selected then return
if isequal([filename,pathname],[0,0])
    return
    
    % Otherwise construct the fullfilename and Check and load the file
else
    % To keep the path accessible to futur request
    cd(pathname);
    
    LocalFile=fullfile(pathname,filename);
    guidata(hObject,handles);
    matObj=matfile(LocalFile);
    info=whos(matObj,'SpikeFilterData');
    if ~isempty(info)
        NumberFilter=max(size(matObj,'SpikeFilterData'));
        for i=1:NumberFilter
            TextFilter{i}=['Filter',' ',num2str(i)];
        end
        set(handles.FilenameShow,'String',LocalFile);
        set(handles.FilterSelector,'String',TextFilter);
        set(handles.SelectFileOption,'Value',1);
    else
        msgbox('No Filters in this file');
    end
end


% --- Executes on selection change in LoadBehSelect.
function LoadBehSelect_Callback(hObject, eventdata, handles)
% hObject    handle to LoadBehSelect (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns LoadBehSelect contents as cell array
%        contents{get(hObject,'Value')} returns selected item from LoadBehSelect


% --- Executes during object creation, after setting all properties.
function LoadBehSelect_CreateFcn(hObject, eventdata, handles)
% hObject    handle to LoadBehSelect (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in FilterSelector.
function FilterSelector_Callback(hObject, eventdata, handles)
% hObject    handle to FilterSelector (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns FilterSelector contents as cell array
%        contents{get(hObject,'Value')} returns selected item from FilterSelector


% --- Executes during object creation, after setting all properties.
function FilterSelector_CreateFcn(hObject, eventdata, handles)
% hObject    handle to FilterSelector (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes when user attempts to close figure1.
function figure1_CloseRequestFcn(hObject, eventdata, handles)
% hObject    handle to figure1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: delete(hObject) closes the figure
delete(hObject);


% --- Executes on button press in SelectAllFilters.
function SelectAllFilters_Callback(hObject, eventdata, handles)
% hObject    handle to SelectAllFilters (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of SelectAllFilters
if (get(handles.SelectAllFilters,'Value')==1)
    set(handles.FilterSelector,'Enable','off');
else
    set(handles.FilterSelector,'Enable','on');
end


% --- Executes on selection change in SelectFileOption.
function SelectFileOption_Callback(hObject, eventdata, handles)
% hObject    handle to SelectFileOption (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns SelectFileOption contents as cell array
%        contents{get(hObject,'Value')} returns selected item from SelectFileOption
global SpikeGui;

if   (get(handles.SelectFileOption,'Value')==2)
    LocalFile=SpikeGui.ShareApp.LoadFile;
    matObj=matfile(LocalFile);
    info=whos(matObj,'SpikeFilterData');
    if ~isempty(info)
        NumberFilter=max(size(matObj,'SpikeFilterData'));
        for i=1:NumberFilter
            TextFilter{i}=[num2str(i),' - ',SpikeFilterData(i).Label.ListText];
        end
        set(handles.FilenameShow,'String',LocalFile);
        set(handles.FilterSelector,'String',TextFilter);
    else
        msgbox('No Filters in this file');
    end
end


% --- Executes during object creation, after setting all properties.
function SelectFileOption_CreateFcn(hObject, eventdata, handles)
% hObject    handle to SelectFileOption (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
